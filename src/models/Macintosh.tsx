/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Daniel O'Neil (https://sketchfab.com/doneil)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/models/3b66e98d137d4a23aaa725ce0a8aec28
title: Macintosh Classic (1991)
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Mac_Tri_Baked_MacTriBaked_0: THREE.Mesh;
  };
  materials: {
    ["Mac.Tri.Baked"]: THREE.MeshStandardMaterial;
  };
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    "/models/macintosh.gltf"
  ) as unknown as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group
            position={[646.62, 151.23, 2465.2]}
            rotation={[Math.PI, 1.16, 3.07]}
          />
          <group position={[-371.19, 0, 0]}>
            <mesh
              geometry={nodes.Mac_Tri_Baked_MacTriBaked_0.geometry}
              material={materials["Mac.Tri.Baked"]}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/macintosh.gltf");
