/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: boriscargo (https://sketchfab.com/boriscargo)
license: SKETCHFAB Editorial (https://sketchfab.com/licenses)
source: https://sketchfab.com/3d-models/macintosh-128k-4c358ebbf82a48acb6ee7b08f5bb91a1
title: Macintosh 128k
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    macintosh128_beige_0: THREE.Mesh;
    macintosh128_screen_0: THREE.Mesh;
    macintosh128_black_plastic_0: THREE.Mesh;
    macintosh128_pomme_0: THREE.Mesh;
    macintosh128_pommme_vert_0: THREE.Mesh;
    macintosh128_pomme_jaune_0: THREE.Mesh;
    macintosh128_pomme_orange_0: THREE.Mesh;
    macintosh128_pomme_rouge_0: THREE.Mesh;
    macintosh128_pomme_violet_0: THREE.Mesh;
    macintosh128_pomme_bleu_0: THREE.Mesh;
    macintosh128_metal_0: THREE.Mesh;
    macintosh128_grey_plastic_0: THREE.Mesh;
  };
  materials: {
    beige: THREE.MeshStandardMaterial;
    screen: THREE.MeshStandardMaterial;
    black_plastic: THREE.MeshStandardMaterial;
    pomme: THREE.MeshStandardMaterial;
    pommme_vert: THREE.MeshStandardMaterial;
    pomme_jaune: THREE.MeshStandardMaterial;
    pomme_orange: THREE.MeshStandardMaterial;
    pomme_rouge: THREE.MeshStandardMaterial;
    pomme_violet: THREE.MeshStandardMaterial;
    pomme_bleu: THREE.MeshStandardMaterial;
    metal: THREE.MeshStandardMaterial;
    grey_plastic: THREE.MeshStandardMaterial;
  };
};

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    '/models/macintosh.gltf',
  ) as unknown as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.01}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            geometry={nodes.macintosh128_beige_0.geometry}
            material={materials.beige}
          />
          <mesh
            geometry={nodes.macintosh128_screen_0.geometry}
            material={materials.screen}
          />
          <mesh
            geometry={nodes.macintosh128_black_plastic_0.geometry}
            material={materials.black_plastic}
          />
          <mesh
            geometry={nodes.macintosh128_pomme_0.geometry}
            material={materials.pomme}
          />
          <mesh
            geometry={nodes.macintosh128_pommme_vert_0.geometry}
            material={materials.pommme_vert}
          />
          <mesh
            geometry={nodes.macintosh128_pomme_jaune_0.geometry}
            material={materials.pomme_jaune}
          />
          <mesh
            geometry={nodes.macintosh128_pomme_orange_0.geometry}
            material={materials.pomme_orange}
          />
          <mesh
            geometry={nodes.macintosh128_pomme_rouge_0.geometry}
            material={materials.pomme_rouge}
          />
          <mesh
            geometry={nodes.macintosh128_pomme_violet_0.geometry}
            material={materials.pomme_violet}
          />
          <mesh
            geometry={nodes.macintosh128_pomme_bleu_0.geometry}
            material={materials.pomme_bleu}
          />
          <mesh
            geometry={nodes.macintosh128_metal_0.geometry}
            material={materials.metal}
          />
          <mesh
            geometry={nodes.macintosh128_grey_plastic_0.geometry}
            material={materials.grey_plastic}
          />
          <group
            position={[-27.8, 39.87, 115.2]}
            rotation={[-0.04, 1.31, -0.19]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/models/macintosh.gltf');
